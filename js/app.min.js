/*
    Функция для вывода выпадающих подсказок с городами.
    1. Вешает события ввода тескта на поле.
    2. Если введено 3 и более символов, отправляет запрос на наш сервер.
    3. При получении ответа, выводит его в выпадающих подсказках.
*/

function outputHints(select) {
    let cell = document.querySelector(select);
    let input = cell.querySelector('.form__input');
    let hintsBlock = cell.querySelector('.form__hints');

    input.addEventListener('input', (e) => {
        // Если есть подсказки, удаляем их
        let hints = hintsBlock.querySelectorAll('.form__hints-element');
        if (hints.length > 0) {
            for (let i = 0; i < hints.length; i++) {
                hints[i].remove();
            }
        };

        if (input.value.length > 2) {
            let objectQuery = {};
            objectQuery = {
                query: input.value,
                contentType: "city",
                withParent: 1,
                limit: 20
            };
        
            let params = '';
            for (let key in objectQuery) {
                if (params === '') {
                    params = `${key}=${objectQuery[key]}`;
                } else {
                    params += `&${key}=${objectQuery[key]}`;
                }
            }
            console.log(objectQuery);
            console.log(params);
            let ajax = new XMLHttpRequest();
            let url = 'http://logist-master/api/hints?' + params;
            ajax.open('get', url, false);
                ajax.addEventListener('readystatechange', function () {
                    if (this.readyState == 4 && this.status == 200) {
                        let res = JSON.parse(this.responseText)['result'];
                        console.log(res);
                        for (let i = 1; i < res.length; i++) {
                            let hintElement = document.createElement('div');
                            hintElement.classList.add('form__hints-element');

                            let hintCity = document.createElement('div');
                            hintCity.classList.add('form__hints-city');
                            hintCity.innerText = res[i]['typeShort'] + ". " + res[i]['name'];
                            hintElement.append(hintCity);

                            let hintRegion = document.createElement('div');
                            hintRegion.classList.add('form__hints-region');
                            hintRegion.innerText = res[i]['parents'][0]['name'] + " " + res[i]['parents'][0]['type'];
                            hintElement.append(hintRegion);

                            hintsBlock.append(hintElement);
                        }
                    }
                });
            ajax.send();
        }
    })   
}
outputHints('.form__cell_from');

