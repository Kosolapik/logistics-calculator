let formDataCalculator = new FormData();

function outputHints(select) {
    let cell = document.querySelector(select);
    let blockRegion = cell.querySelector('.form__inner_region');
    let inputRegion = blockRegion.querySelector('.form__input');
    let hintsRegion = blockRegion.querySelector('.form__hints');
    let blockLocality = cell.querySelector('.form__inner_locality');
    let inputLocality = blockLocality.querySelector('.form__input');
    let hintsLocality = blockLocality.querySelector('.form__hints');

    inputText(inputLocality, hintsLocality, "city");
    inputText(inputRegion, hintsRegion, "region");

    /* 
        Функция вывода подсказок при вводе текста.
        Принимает в параметрах:
            - поле ввода текста
            - блок для вывода подсказок
            - что ищем (регион или населнный пункт)
    */
    function inputText(fild, blockHints, searchContent) {
        fild.addEventListener('input', function(e) {
            // Если есть подсказки, удаляем их
            let hints = blockHints.querySelectorAll('.form__hints-element');
            if (hints.length > 0) {
                for (let i = 0; i < hints.length; i++) {
                    hints[i].remove();
                }
            };
    
            if (fild.value.length > 2) {
                let objectQuery = {};
                objectQuery = {
                    query: fild.value,
                    contentType: searchContent,
                    withParent: 1,
                    limit: 20
                };
                console.log(objectQuery);
            
                let params = '';
                for (let key in objectQuery) {
                    if (params === '') {
                        params = `${key}=${objectQuery[key]}`;
                    } else {
                        params += `&${key}=${objectQuery[key]}`;
                    }
                }
    
                let ajax = new XMLHttpRequest();
                let url = 'http://logist-master/api/hints?' + params;
                ajax.open('get', url, false);
                ajax.addEventListener('readystatechange', function () {
                    if (this.readyState == 4 && this.status == 200) {
                        let res = JSON.parse(this.responseText)['result'];
                        console.log(res);
                        for (let i = 1; i < res.length; i++) {
                            let hintElement = document.createElement('div');
                            hintElement.classList.add('form__hints-element');
                            
                            if (searchContent == "city") {
                                let hintCity = document.createElement('div');
                                hintCity.classList.add('form__hints-city');
                                hintCity.innerText = res[i]['typeShort'] + ". " + res[i]['name'];
                                hintElement.append(hintCity);

                                let hintRegion = document.createElement('div');
                                hintRegion.classList.add('form__hints-region');
                                hintRegion.innerText = res[i]['parents'][0]['name'] + " " + res[i]['parents'][0]['type'];
                                hintElement.append(hintRegion);
                            } else if (searchContent == "region") {
                                let hintRegion = document.createElement('div');
                                hintRegion.classList.add('form__hints-region');
                                hintRegion.innerText = res[i]['name'] + " " + res[i]['type'];
                                hintElement.append(hintRegion);
                            }
    
                            blockHints.append(hintElement);
                        }
                    }
                });
                ajax.send();
            }
        })
    }

    /*
        Функция открывающая поле региона при клике на ссылку "Указать регион" и скрывающая ссылку.
    */
    (function () {
        let link = blockRegion.querySelector('.form__link');
        link.addEventListener('click', (e) => {
            inputRegion.classList.remove('display_off');
            link.classList.add('display_off');
        });
    }());
}
outputHints('.form__cell_from');
outputHints('.form__cell_where');



